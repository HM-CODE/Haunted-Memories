&C.+VITAE/TRANSFER #3250=$+vitae/transfer *=*:@assert ic(%#)={@pemit %#=msg(r,+vitae,This command can only be used IC.)}; @assert cand(isdbref(setr(P,locate(%#,trim(%0),nP))),hastype(%qP,PLAYER))={@pemit %#=msg(r,+vitae,I don't see anyone named '%0' to transfer vitae to.)}; @assert cand(isint(setr(A,trim(%1))),gt(%qA,0))={@pemit %# = msg( r, +vitae, The amount specified is not a positive integer value. )} ; @break isdbref(defaul(pdb(%#,GM)/VITAE.RECIPIENT,#-1))={@pemit %# = msg( r, +vitae, You can only have one outstanding vitae/transfer request at a time.)} ;think setq(C,getstat(%#,VITAE,T));think setq(M,getstat(%#,VITAE,P)); think setq(F,getstat(%QP,FACTION)); @assert lte(add(%QC,%qA),%qM)={@pemit %#=msg(r,+vitae, You do not need that much vitae.)} ; &VITAE.RECIPIENT [pdb(%#,GM)] = %qP; &TRANSFER.AMOUNT [pdb(%#,GM )] = %qA; @pemit %#=msg(r,+vitae, You send a request to [name(%qP)] to transfer %qA vitae to them. ) ; @pemit %qP=msg(r,+vitae, %N would like to feed you %qA points of vitae.%r%tIf you would like to accept\, please type +vitae/allow %N.%r%tIf you would like to deny it\, then you may type +vitae/deny %N.%r%tIf you choose to ignore this message it will timeout in 5 minutes.); @cemit BigBrother=%N attempts to feed [name( %qP )] %qA points of vitae.; think setq( T, secs() ); &VITAE.TIME [pdb(%#,GM)] = %qT; @wait [mul(5,60)] = { @assert isdbref(xget(pdb(%#,GM),VITAE.RECIPIENT)); @wipe [pdb(%#,GM)]/VITAE.RECIPIENT; @wipe [pdb(%#,GM)]/TRANSFER.AMOUNT; @pemit %#=msg(r,+vitae,[name(%qP)] did not reply to your request to transfer vitae to them. The request has expired. ); @pemit %qP=msg(r,+vitae,You did not reply to %N's request to feed you vitae. The request has expired. ); @cemit BigBrother=[name(%qP)] did not reply to %N's request to feed them vitae. The request has expired.}
&C.+VITAE/ALLOW #12395=$+vitae/allow *:@assert isic(%#)={@pemit %#= msg(r,+vitae, This command can only be used IC.)}; @assert cand(isdbref(setr(P,locate(%#,trim(%0),nP))),hastype(%qP,PLAYER))={@pemit %#=msg(r,+vitae,I don't see anyone named '%0' to allow to transfer vitae to you.)}; @assert match(default(pdb(%qP,GM)/VITAE.RECIPIENT,#-1),%#)={@pemit %#=msg(r,+vitae,You don't have any outstanding vitae/transfer requests from [obj(%qP)].)}; @cemit BigBrother=[name(%#)] has allowed [name(%qP)] to transfer vitae to [obj(%#)].; [setq(y,get(pdb(%qp,gm)/TRANSFER.AMOUNT))];+setstat %qP/VITAE=-[trim(%qy)]/T; think setq(N,sub(getstat(%qP,VITAE,P),getstat(%qP,VITAE,T)));+setstat %#/VITAE=[setr(A,ifelse(gte(%qN,trim(%qy)),trim(%qy),%qN))]/T;@pemit %qP=msg(r,+vitae,You transfer [trim(%qy)] vitae to [name(%#)].); @trigger #3241/t.vitae.log=%qP,[trim(%qy)],Transferred to [name(%#)]<%#> ; @trigger #3241/t.vitae.log=%#,%qy,Transferred from [name(%qP)]<%qp> ; @cemit BigBrother=[name(%QP)]<%QP> transfers %qy vitae to [name(%#)], spending %qy of their own in the process. ; &VITAE.RECIPIENT [pdb(%qp,gm)]=; &TRANSFER.AMOUNT [pdb(%qp,gm)]=; &d.bonds [setr(r,pdb(pmatch(%#),gm))]=[if(cand(gte(match(get(me/f.bond.eligible),getstat(%#,faction)),1),not(match(get(me/f.no.bond.bloodline),getstat(%QP,bloodline),|))),[if(gt(words(setr(w,extract(setr(z,get(%qr/d.bonds)),match(%qz,%QP:*,|),1,|))),0),[if(cand(match(%qz,*:3:*,|),gte(add(extract(%qw,2,1,:),1),3)),[replace(%qz,match(%qz,%QP:*,|),[extract(%qw,1,2,:)]:[vsecs()],|)],[if(eq(add(extract(%qw,2,1,:),1),3),%QP:[add(extract(%qw,2,1,:),1)]:[vsecs()],[replace(%qz,match(%qz,%QP:*,|),%QP:[add(extract(%qw,2,1,:),1)]:[vsecs()],|)])])],%qz|%QP:1:[vsecs()])],get(%qr/d.bonds))] ; &d.addiction.log %qr=[trim([vsecs()]:[if(lte(sub(rest(get(%qr/d.addiction),|),1),-5),-5,sub(rest(get(%qr/d.addiction),|),1))]:You drank vitae from [name(*%QP)]|[extract(get(%qr/d.addiction.log),1,19,|)],b,|)] ; &d.addiction %qr=vsecs()|[if(lte(sub(rest(get(%qr/d.addiction),|),1),-5),-5,sub(rest(get(%qr/d.addiction),|),1))] ; @pemit %#=msg(r,+vitae,{[name(%QP)] has fed you %Qy point(s) of Vitae. You may be subject to a new or increased Vinculum, and gain a -1 penalty to your vitae addiction resistance.})
&C.+VITAE/DENY #12395=$+vitae/deny *:@assert isic(%#)={@pemit %#=msg(r,+vitae,This command can only be used IC.)}; @assert cand(isdbref( setr(P,locate(%#,trim(%0),nP))),hastype(%qP,PLAYER))={@pemit %#=msg(r,+vitae, I don't see anyone named '%0' to deny transferring vitae from. )}; @assert match(default(pdb(%qP,GM)/VITAE.RECIPIENT,#-1),%#)={@pemit %#=msg(r,+vitae,You don't have any outstanding transfer requests from [name(%qp)]. )};@wipe [pdb(%qP,GM)]/VITAE.RECIPIENT;@wipe [pdb(%qP,GM )]/TRANSFER.AMOUNT; @pemit %qP=msg(r,+vitae, %N has declined your vitae transfer request. ); @pemit %#=msg(r,+vitae, You decline [name(%qP)]'s request.); @cemit BigBrother=%N declines [name( %qP )]'s request to transfer vitae to [obj( %# )].
&C.vitae/transfer #3250=