&c.+mana/oblation #6826=$+mana/oblation *:@assert isdbref( setr( H, first( elements( lcon( %L/OBJECT ), match( iter( lcon( %L/OBJECT ), parent( ## ) ), #8136 ) ) ) ) ) = { @pemit %# = msg( c, mana, There is no hallow in your location. ); }; @assert cand( isint( %0 ), gt( %0, 0 ) ) = { @pemit %# = msg( c, mana, That is not a valid mana amount. ); }; @assert cor( setr( N, gt( vsecs(), add( first( default( %qH/D.USE.%#, 0 ) ), mul( 24, 60, 60 ) ) ) ), lte( %0, sub( xget( %qH, D.RATING ), last( default( %qH/D.USE.%#, 0 ) ) ) ) ) = { @pemit %# = msg( c, mana, You cannot draw that much mana from this hallow today. ); }; @assert lte( %0, add( xget( %qH, D.TASS ), xget( %qH, D.MANA ) ) ) = { @pemit %# = msg( c, mana, The hallow does not have that much available. ); }; @assert lte( add( getstat( %#, Mana, T ), %0 ), getstat( %#, Mana, P ) ) = { @pemit %# = msg( c, mana, You do not need that much mana. ); }; think [setq( R, nwoddice( [add( getstat( %#, GNOSIS ), getstat( %#, COMPOSURE ) )] ) )]; @cemit BigBrother=%n<%#> performs an oblation at [name( %L )]<%L> and gains [setr( A, min( last( %qR, | ), %0 ) )] mana. \(Raw: %qR\); @pemit %# = msg( c, mana, You regain %qA mana.); think [setstat(%#,mana,%qa,T)]; &LOG-MANA [setr( P, pdb( %#, GM ) )] = insert( ldelete( xget( %qP, LOG-MANA ), 20, | ), 1, vsecs():%0:Performed an oblation at [name( %l )]<%L>, | ); think [setq( M, min( xget( %qH, D.MANA ), %qA ) )]; &D.MANA %qH = [sub( xget( %qH, D.MANA ), %qM )]; &D.TASS %vH = [sub( xget( %qH, D.TASS ), sub( %qA, %qM ) )]; &D.USE.%# %qH = [vsecs()] [ifelse( %qN, %qA, add( last( xget( %qH, D.USE.%# ) ), %qA ) )];